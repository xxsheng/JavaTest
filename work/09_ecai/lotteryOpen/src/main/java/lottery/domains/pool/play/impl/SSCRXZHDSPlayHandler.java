package lottery.domains.pool.play.impl;



import lottery.domains.pool.play.ITicketPlayHandler;
import lottery.domains.pool.play.WinResult;
import lottery.domains.pool.util.TicketPlayUtils;

import java.util.*;
import java.util.concurrent.ConcurrentHashMap;

/**
 * 时时彩 任选 直选 单式 玩法处理类
 *
 */
public class SSCRXZHDSPlayHandler implements ITicketPlayHandler{
	private String playId;
	/** 任选号码数量 */
	private int rxNum;

	public SSCRXZHDSPlayHandler(String playId,int rxNum) {
		this.playId= playId;
		this.rxNum = rxNum;
		schedulerClearCache();
	}

	private static ConcurrentHashMap<Integer, Object[]> numCache = new ConcurrentHashMap<>();
	public static void schedulerClearCache() {
		TimerTask task = new TimerTask() {
			@Override
			public void run() {
				synchronized (numCache) {
					numCache.clear();
				}
			}
		};
		Timer timer = new Timer();
		timer.schedule(task, 1000, 1000 * 60 * 30); // 每30分钟清理一次缓存
	}

	@Override
	public String[] getBetNums(String bet) {
		return null;
	}

	private Object[] resolveBetCodes(String betCodes) {
		Object [] res = new Object [2];
		String []xz = betCodes.substring(1,10).split(",");
		StringBuffer placeIndex = new StringBuffer();
		for (int i = 0; i < xz.length; i++) {
			if(xz[i].equals("√")){
				placeIndex.append(String.valueOf(i)).append(",");
			}
		}
		String placeVal = placeIndex.toString().trim();
		if(!placeVal.equals("")){
			placeVal = placeVal.substring(0,placeVal.length()-1);
		}

		String betValue = betCodes.substring(11,betCodes.length()).trim();

		TreeSet<String> filter = new TreeSet<>();
		String[] split = betValue.split(" ");
		for (int i = 0; i < split.length; i++) {
			if (split[i] != null && split[i].trim().length() > 0) {
				filter.add(split[i]);
			}
		}
		String[] nums = filter.toArray(new String[] {});
		Arrays.sort(nums);

		res[0] = placeVal.trim().split(",");
		res[1] = nums;
		return res;
	}

	@Override
	public String[] getOpenNums(String openNums) {
		return TicketPlayUtils.getOpenNums(openNums, OFFSETS_WUXIN);
	}

	private Object[] resolveDataFromCache(int userBetsId, String betCodes) {
		Object[] data = null;
		boolean hit = false;
		try {
			if (numCache.containsKey(userBetsId)) {
				synchronized (numCache) {
					data = numCache.get(userBetsId);
					hit = true;
				}
			}
			else {
				data = resolveBetCodes(betCodes);
			}
		} catch (Exception e) {
			e.printStackTrace();
			numCache.remove(userBetsId);
		}

		if (data == null) {
			data = resolveBetCodes(betCodes);
			hit = false;
		}

		if (data == null || data.length != 2) {
			return null;
		}

		if (!hit) {
			String[] offsets = ((String[])data[0]);
			String[] betNums = ((String[])data[1]);

			data = new Object[]{betNums, offsets};
			synchronized (numCache) {
				numCache.put(userBetsId, data);
			}
		}

		return data;
	}

	@Override
	public WinResult calculateWinNum(int userBetsId, String betCodes, String openCodes) {
		WinResult result = new WinResult();

		Object[] data = resolveDataFromCache(userBetsId, betCodes);
		if (data == null) {
			return result;
		}

		String[] betNums = ((String[])data[0]);
		String[] offsets = ((String[])data[1]);

		switch (rxNum) {
			case 2: // 二码
				for (int i = 0; i < offsets.length - 1; i++) {
					for (int j = i + 1; j < offsets.length; j++) {
						String[] offsetOpenNums = TicketPlayUtils.getOpenNums(openCodes, new int[]{Integer.parseInt(offsets[i]), Integer.parseInt(offsets[j])});

						String num = new StringBuilder().append(offsetOpenNums[0]).append(offsetOpenNums[1]).toString();
						if (Arrays.binarySearch(betNums, num) >= 0) {
							result.setWinNum(result.getWinNum()+1);
						}
					}
				}
				break;
			case 3: // 三码
				for (int i = 0; i < offsets.length - 1; i++) {
					for (int j = i + 1; j < offsets.length; j++) {
						for (int k = j + 1; k < offsets.length; k++) {
							String[] offsetOpenNums = TicketPlayUtils.getOpenNums(openCodes, new int[]{Integer.parseInt(offsets[i]), Integer.parseInt(offsets[j]), Integer.parseInt(offsets[k])});

							String num = new StringBuilder().append(offsetOpenNums[0]).append(offsetOpenNums[1]).append(offsetOpenNums[2]).toString();
							if (Arrays.binarySearch(betNums, num) >= 0) {
								result.setWinNum(result.getWinNum()+1);
							}
						}
					}
				}
				break;
			case 4: // 四码
				for (int i = 0; i < offsets.length - 1; i++) {
					for (int j = i + 1; j < offsets.length; j++) {
						for (int k = j + 1; k < offsets.length; k++) {
							for (int m = k + 1; m < offsets.length; m++) {
								String[] offsetOpenNums = TicketPlayUtils.getOpenNums(openCodes, new int[]{Integer.parseInt(offsets[i]), Integer.parseInt(offsets[j]), Integer.parseInt(offsets[k]), Integer.parseInt(offsets[m])});

								String num = new StringBuilder().append(offsetOpenNums[0]).append(offsetOpenNums[1]).append(offsetOpenNums[2]).append(offsetOpenNums[3]).toString();
								if (Arrays.binarySearch(betNums, num) >= 0) {
									result.setWinNum(result.getWinNum()+1);
								}
							}
						}
					}
				}
				break;
			default:
				break;
		}

		result.setPlayId(playId);
		return result;
	}

	public static void main(String[] args) {
		// // 任二直选单式
		// String betCodes = "[-,-,√,√,√]08 09 12 30 35 37 48 51 53 57 61 62 63 65 69 71 73 75 82 96 99";
		// String openCodes = "7,5,6,9,9";
        //
		// long start = System.currentTimeMillis();
		// SSCRXZHDSPlayHandler handler = new SSCRXZHDSPlayHandler("az5fc_rx2ds", 2);
        //
		// // 测试性能
		// for (int i = 0; i < 100000; i++) {
		// 	WinResult winResult = handler.calculateWinNum(1, betCodes, openCodes);
		// }
        //
		// // 测试准确性
		// WinResult winResult = handler.calculateWinNum(1, betCodes, openCodes);
		// System.out.println(winResult.getWinNum());
        //
		// long spent = System.currentTimeMillis() - start;
		// System.out.println("耗时：" + spent);
        //
		// System.exit(0);

		// // 任三直选单式
		// String betCodes = "[-,√,√,√,√
		// String openCodes = "0,6,1,7,4";
        //
		// long start = System.currentTimeMillis();
		// SSCRXZHDSPlayHandler handler = new SSCRXZHDSPlayHandler("az5fc_rx3ds", 3);
        //
		// // 测试性能
		// for (int i = 0; i < 100000; i++) {
		// 	WinResult winResult = handler.calculateWinNum(1, betCodes, openCodes);
		// }
        //
		// // 测试准确性
		// WinResult winResult = handler.calculateWinNum(1, betCodes, openCodes);
		// System.out.println(winResult.getWinNum());
        //
		// long spent = System.currentTimeMillis() - start;
		// System.out.println("耗时：" + spent);
        //
		// System.exit(0);

		// 任选四单式
		String betCodes = "[√,√,-,√,√
		String openCodes = "5,3,2,4,9";

		long start = System.currentTimeMillis();
		SSCRXZHDSPlayHandler handler = new SSCRXZHDSPlayHandler("az5fc_rx4ds", 4);

		// 测试性能
		for (int i = 0; i < 100000; i++) {
			WinResult winResult = handler.calculateWinNum(1, betCodes, openCodes);
		}

		// 测试准确性
		WinResult winResult = handler.calculateWinNum(1, betCodes, openCodes);
		System.out.println(winResult.getWinNum());

		long spent = System.currentTimeMillis() - start;
		System.out.println("耗时：" + spent);

		System.exit(0);
	}
}